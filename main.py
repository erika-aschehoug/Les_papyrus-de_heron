import pygame
import Graphical_interface.graphical_interface
import Terminal_interface.terminal_interface

def display_window():
    pygame.init()
    screen = pygame.display.set_mode((800, 600))
    pygame.display.set_caption("Sorting Algorithm Visualizer")
    font = pygame.font.Font(None, 36)
    clock = pygame.time.Clock()
   
    # Creating rectangles for the text background and buttons 
    button_g = pygame.Rect(50, 500, 155, 50)
    button_t = pygame.Rect(250, 500, 400, 50)
    text_background = pygame.Rect(40, 465, 460, 30)

    # load and display the background image
    background = pygame.image.load("pictures\sortings_ia_illustration.jpg")
    background = pygame.transform.scale(background, (800, 600))

    # add text
    text_image = font.render("Image generated by an IA", True, (200, 200, 200))
    text_choice = font.render("Choose the interface you want to use:", True, (0, 0, 0))
    text_g = font.render("Use the GUI", True, (0, 0, 0))
    text_t = font.render("Use the command line interface", True, (0, 0, 0))
    
    

    while True:
        for event in pygame.event.get(): # get all the events that have occurred
            if event.type == pygame.QUIT: # check if the user has clicked on the close button
                pygame.quit()  # close the pygame window
                return False
            if event.type == pygame.MOUSEBUTTONDOWN: # check if the mouse has been clicked
                if button_g.collidepoint(event.pos): # check if the mouse is over the button
                    pygame.quit()
                    result = Graphical_interface.graphical_interface.main() # open the graphical interface
                    return 
                elif button_t.collidepoint(event.pos): # check if the mouse is over the button
                    pygame.quit() # close the pygame window before opening the terminal interface 
                    result = Terminal_interface.terminal_interface.main() # open the terminal interface
                    if result is False: 
                        return 

        screen.blit(background, (0, 0)) 
        
        # draw the rectangles
        pygame.draw.rect(screen, (200, 200, 200), text_background)
        pygame.draw.rect(screen, (200, 200, 200), button_g)
        pygame.draw.rect(screen, (200, 200, 200), button_t)
        
        # draw the text, buttons and background image
        screen.blit(text_g, (button_g.x + 10, button_g.y + 10))
        screen.blit(text_t, (button_t.x + 10, button_t.y + 10))
        screen.blit(text_choice, (50, 470))
        screen.blit(text_image, (50, 10))
        
        # update the display
        pygame.display.flip()
        
        # limit the frame rate
        clock.tick(60)

def main():
    while True: # loop to allow the user to choose the interface he wants to use
        result = display_window() # display the window with the buttons
        if result is False: 
            return 

if __name__ == "__main__":
    main()
